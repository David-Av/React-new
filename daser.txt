*******************************************************************
nayi noric Provideri masin u contexti masin u reducerner@ karevor u dispatch@ 
das64(SHAT USHADIR NAYEL MASIVI METODNEROV ESI ESIMINCHER AREC some metod@ ushadir )
u thunk-i dispatch@ objecti u arrayi gluboki copin 
*******************************************************************
//////////////////////////////////////////////////
das56
componentner@ linum en presentacion presentacioni imast@ ena vor propserov danniner stana return ani mez jsx et danninerov linum en classovi dranq classner en voric stexcvum en objectner u classovinern el ajax zaprosner u tenc baner en anum isk containerniner@ shpvum en stori het presentacion@ ptat@m enq classovi-i mej classovi-in container componenti mej u sax texapoxecinq Users_Contaoner-i mej aysinqn connecti component@ ashxatuma storei het class@ ashxatuma ajax zaprosi hamar presentacion-nn el cuyca talis sax

///////////////////////////////////////////////////////
das57
sarqum enq preloader avelacrecinq preloader@ state-um avelacrecinq isFetching hatkutyun@ ete true a cuyca talis preloader@ ete false a chi cuyc talis u eti sax grel enq ajax zaprosneri logikayum componentDidMount-um mekel ej@ poxelu functiayum hanecinq arancin component sarqecinq preloader@
////////////////////////////////////////////////////////
das58
poxum enq mapDispatch to props@ refactoring 
let mapDispatchToProps = (dispatch) => {
  return {
    follow: (userId) => {
      dispatch(followAC(userId));
    },
    unFollow: (userId) => {
      dispatch(unFollowAC(userId));
    },
    setUsers: (users) => {
      dispatch(setUsersAC(users));
    },
    setCurrentPage: (pageNumber) => {
      dispatch(setCurrentPageAC(pageNumber));
    },
    setTotalUsersCount: (totalCount) => {
      dispatch(setUsersTotalCountAC(totalCount));
    },
    toggleIsFetching: (isFetching) => {
      dispatch(setIsFetchingAC(isFetching));
    },
  };
};
let mapDispatchToProps1 =
   {
    follow: followAC,
    unFollow: unFollowAC,
    setUsers: setUsersAC,
    setCurrentPage: setCurrentPageAC,
    setTotalUsersCount:setUsersTotalCountAC,
    toggleIsFetching: setIsFetchingAC
    }
    connecti mej arajiN@ tex@ poxancecinq prost@ es object@ u chem jog@m vonc ashxatuma heto vabshe ay senc 
    {
  followAC,
  unFollowAC,
  setUsersAC,
  setCurrentPageAC,
  setUsersTotalCountAC,
  setIsFetchingAC,
}
vobshem knayes anpayman noric
aysinqn karum enq senc poxancenq isk es reacr-redux@ es connecti mijocov vekaluma sarquma functia mej@ dnum et argument@ vor@ menq UI-um poxancecinq dispatch a anum u ashxatuma avtomat maladec
////////////////////////////////////////////////////////////////////////das59
profile@ mej cuyc enq talu konkret mardu profil@ erb vor usersi vra sxmenq et mardu vra qcelu u profile/{u stex et useri id}
eti vonc haskaca tarber json filerica galu nuyn users json file@ chi 
vobshem sarqecinq profile@ hamar component connectov dranq knayes prost@ stex urish xndir ka profile@ mej img src zaprosica galis bayc render@ zaprosic shuta ashxatum aysinqn inq@ render a anum bayc hl@ zaprosi danniner@ chi ekel dra hamar image src chi karum karda dra hamar nkarvoc component-um stex profileInfo-um proverka enq grum ay senca linum
const ProfileInfo = (props) => {
  if(!props.profile){
    return <Preloader/>
  }
  return (
    <div>
      <img
        className={s.image}
        src="https://www.wpexplorer.com/wp-content/uploads/wordpress-image-optimization-guide.jpg"
      />
      <div></div>
      <div>
          <img src={props.profile.photos.small} alt=""/>
        ava+ description</div>
    </div>
  );
};
aysinqn dursa galis voncvor 2 angam nkarvi component@ 2rd angamic sax kberi if-i mej chi mtni el
////////////////////////////////////////////////////////////////////////das60
withRouter props.match.params
withRouter@ bardzr kargi component a dra masin heto 
hima menq erv bor users-um useri vra sxmum neq brauseri link@ poxvuma orinak darnuma profile/54 ay es 54@ petqa vercnenq u ogtagorcenq dra hamar ka hatuk functia withRouter onnecti component@ ashxatuma storei het class@ ashxatuma ajax zaprosi hamar presentacion-nn el cuyca talis sax mihatel component enq sarqum vor urli het ashxati aysinqn konkret stex es depqum profileContainer classovi component@ mihatel urish withRouter-i mej enq patatum esa tesq@
class ProfileContiner extends React.Component {
  componentDidMount() {
    axios
    .get(
      `https://social-network.samuraijs.com/api/1.0/profile/9`
    )
    .then((response) => {
     this.props.setUserProfile(response.data)
    });
      console.log(this.props);
  }
  render() {
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile
})
let WithUrlDataContainerComponent = withRouter(ProfileContiner) STEX USHADIR
export default connect(mapStateToProps, {setUserProfile}) (WithUrlDataContainerComponent);
himi ProfileContiner-um props@ avelacav match objectov location objectov u history objectov u staticContextov hima menq ashxatelu enq match-i het matchi mej ka params key@ eti henc profile/{ay esi params a}
dra hamar app-um enq grum params@ route-um ay senc Route path="/Profile/:userId" render={() => <ProfileContiner />} es : sranic heto inch ka gnuma params-i mej : sranic heto inch anun grenq params objecti mej tenc key a haytvelu et anunov
////////////////////////////////////////////////////////////////
das61
login
menq login exav vaxt erb vor serverin request enq uxarkum sabshenianeri dra mej mer id-n nshvac chi urish dzeva linum amen sayt@ uni cookie skseluc eti datarka cookie-n kpcnum amen zaprosin ete menq login lineluc paroln u name@ chisht enq grum cookie-i mej grvuma mer informacian kodavorvac cookie-n uni lifetime aysinqn michev erba inq@ mnalu vor saytum sxmum es remember me eti cookie-i lifetime-i heta kapvac vor@ heto ogtagorcvuma orinak message-er@ request aneluc ka 2hat cookie mek@ localhosti hamar mek@ henc API serveri mer depqum erevi himi ashxatelu enq header-het hl@ vor senc sarqum enq auth-reducer 
`https://social-network.samuraijs.com/api/1.0/auth/me` senc request enq uxarkum u erkord parametr geti mej grum enq {withCredentials:true} object petqa sra saytum reg exac linenq et vaxt cookin im brauseri meji kta mez es request@ normal {withCredentials:true} esel grum enq vorovhetev et cros anvtangutyun@ vabshe chi toxum 2 tex zapros uxarkenq bayc senc grelov karanq stex ham mer localhosti zaprosna hamel es sayti
let {id,login,email} = response.data.data es grelu dzev@ nayi anpayman destrukturizacia
////////////////////////////////////////////////////////////////////////
das62
follow unFollow baci get zaprosic ka nayev post u delete u put
.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{},{withCredentials:true})
posti mej {withCredentials:true} esi poxancum enq vorpes 3rd parametr
isk delete@ 2rd parametr hamarya sax zaprosner@ baci get-ic key en uzum
gnum enq sra sayt@ account setting goyutyun uni headers vor@ amen zaprosi het galisa vorpes parametr eli zaprosi mej petqa poxancenq karas network mej urli vra sxmes nayes ete hankarc sxmeluc heto chi poxvum gna nayi du erb vor araji angam zapros es anum userneri cucak@ et depqum ,{withCredentials:true esi vorpes parametr poxancaca te che 
verjnakan sra tesq@ keyov exav senc
{u.followed ? (
                <button onClick={() =>{
                  
                  axios
                  .delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{withCredentials:true,headers:{
                    "API-KEY" : "560961f6-c212-4142-b02d-d99d0a8308d3"
                  }})
                  .then(response=>{
                    if(response.data.resultCode === 0){
                      props.unFollow(u.id)
                    }
                  })
                   }}>

                  Unfollow
                </button>
              ) : (
                <button onClick={() => {
                  axios
                    .post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{},{withCredentials:true,headers:{
                      "API-KEY" : "560961f6-c212-4142-b02d-d99d0a8308d3"
                    }})
                    .then(response=>{
                      if(response.data.resultCode === 0){
                        props.follow(u.id)
                      }
                    })
                  }}>
                  follow
                </button>
///////////////////////////////////////////////////////////////////
das63 DAL
data access layer
mer Ui@ petq chi vor serverin zapros ani hima nenc kanenq vor DAL-um lini dranq logikan parametrer@ src-um sarqecinq API papken mej@ api.js 
u logikan kamac kamac qcum enq @tex get@ menak taranq @ndex u container component-um et functia vor kanchecinq poxancecinq en argumentner@ vor@ vor petq er 2 hat vorovhetev props@ container componenti meja u tetevacnum enq response@ et api.js mihat then enq anum vor@ stanuma response eti veracuma menak data-in sarqecinq axios-i instance sax mej@ grecinq informacian avtomat parametrer@ inq@ dnuma ay senc url-n key@ en mi object@
const instance = axios.create({
    withCredentials:true,
    baseURL: `https://social-network.samuraijs.com/api/1.0/`,
    headers:{
        "API-KEY" : "560961f6-c212-4142-b02d-d99d0a8308d3"
      }
})

u esi hl@ vor chgidem senc kmna te che upakovka enq anum objecti mej
export const usersApi = {
     getUsers(currentPage ,pageSize){

        return instance
           .get(
             `users?page=${currentPage}&count=${pageSize}`,{withCredentials:true}
           ).then(response=>response.data)
     }
}
////////////////////////////////////////////////////////////////////////
SHAT USHADIR NAYEL MASIVI METODNEROV ESI ESIMINCHER AREC
das64 
button disabled follow/unFollow
erb vor knopkin sxmum es zaprosa uxarkum cankalia et knopken disable anel vor user@ an@ndhat chsxmi u liq@ zaporner chgna sarqum enq sax funcia ban reducernerum u senc <button disabled = {props.followingInProgres} asuma ete es znacheniyan true a uremn disable a ashxatum
////////////////////////////////////////////////////////////////////////
das65 
redux-thunk ira asac sankiner@ TEORIA
hima menq nenc en sarqel vor serveric galisa dal-in dalic UI UI-ic biznes esi shat vat chi bayc meka eli UI-@ shat gorca anum senc anum en bayc meka lav chi  aveli chisht klni vor biznes@ shpvi dal-i het dalnel serveri u amenaverjum gna sx UI stex mihat xndir ka redux@ connect@ petqa miangamic mez het tan stor@ bayc serveri zapros@ asinxron a dra hamar reduceri mej petq chi zapros anenq u @tex mez ognuma thunk@ menq dispatch einq uxarkum object bayc thunk-ov karanq thunk@ uxarkenq dispatch u ira mej grac lini actionCreatori-i logikan bayc stor@ chi karum funcia @nduni inq@ karuma menak object @nduni dispatch-i hamar dra hamar store-i u reducer aranqum mihatel sloy karanq sarqenq 
////////////////////////////////////////////////////////////////////////
das66 thunk practika
thunk enq sarqum reducer-um 
export const getUsersThunkCreator = (currentPage,pageSize)=>{
    
    return (dispatch)=>{
    dispatch(setIsFetching(true));

    usersApi.getUsers(currentPage, pageSize)
      .then((response) => {
        return (
          dispatch(setUsers(response.items)),
          dispatch(setIsFetching(false)),
          dispatch(setTotalUsersCount(response.totalCount))
        
        );
      });
    }
}
stanuma es tesq@ mihat mej@ galisa danniner@ zamikania a linum u sksvuma dranc heto urish functia-ov ashxatel erb vor poxancum enq asuma es chem kara functia dispatch anem dra hamar redux_store-um store@ sarqeluc poxancum enq 2rd argument let store = createStore(reducers,applyMiddleware()); u npm install petqa anenq redux-thunk@ import enq anum import  thunkMiddleware from "redux-thunk"; himi containeri mej grel enq senc  componentDidMount() {
    this.props.getUsers(this.props.currentPage,this.props.pageSize)
    sax es logikan 
    {u.followed ? (  
                <button disabled = {props.followingInProgres.some(id=>id==u.id)} onClick={() =>{
                  props.toggleFollowingProgress(true,u.id)
                  usersApi.unFollow(u.id)
                  .then(response=>{
                    if(response.data.resultCode === 0){
                      props.unFollow(u.id)
                    }
                    props.toggleFollowingProgress(false, u.id)
                  })
                   }}>

                  Unfollow
                </button>
              ) : (
                <button disabled = {props.followingInProgres.some(id=>id==u.id)} onClick={() => {
                  props.toggleFollowingProgress(true,u.id)
                  usersApi.follow(u.id)
                    .then(response=>{
                      if(response.data.resultCode === 0){
                        props.follow(u.id)
                      }
                      props.toggleFollowingProgress(false,u.id)
                    })
                  }}>
                  follow
                </button>
              )}
              ekav user reducer ay senc 
              export const follow = (userId)=>{

    return (dispatch)=>{
        dispatch(toggleFollowingProgress(true,userId))
        usersApi.follow(userId)
          .then(response=>{
            if(response.data.resultCode === 0){
                dispatch(followSuccess(userId))
            }
            dispatch(toggleFollowingProgress(false,userId))
          })
    }
}
export const unFollow = (userId)=>{

    return (dispatch)=>{
        dispatch(toggleFollowingProgress(true,userId))
        usersApi.unFollow(userId)
          .then(response=>{
            if(response.data.resultCode === 0){
                dispatch(unFollowSuccess(userId))
            }
            dispatch(toggleFollowingProgress(false,userId))
          })
    }
}
///////////////////////////////////////////////////////////////////
das68 REDIRECT
aysinqn vor ej@ avtomat mez qcuma urish eji vra menq state-um unenq auth-i stat@ dra mej parametr ka isAuth vor@ asuma login exac enq te che eti vercnum enq Dialogs component-um proverka enq grum ete false a REDIRECT ani logini eji vra REDIRECT-i hamar ka component
const Dialogs = (props) => {
    let addMessage = ()=>{
      props.addMessage()
    }
    let updateDialogText = (e)=>{
      let text = e.target.value
      props.updateDialogText(text)

    }
  let dialogsDataM = props.state.dialogsData.map((person) => (
    <DialogPerson name={person.name} id={person.id} key = {person.id}/>
  ));
  let messagesDataM = props.state.messagesData.map((m) => (
    <Message message={m.message} key = {m.id}/>
  ));
  ******************************************NAYI STEX
  if(props.isAuth === false) return <Redirect to={"/login"}/>
  **********************************************************
  return (
    <div className={s.dialogs}>
      <div className={s.dialog_items}>{dialogsDataM}</div>
      <div className={s.messages}>{messagesDataM}</div>
      <div>
        <input name=""  cols="10" rows="1" onChange = {updateDialogText} value = {props.state.dialogMessage}/>
        <button onClick = {addMessage}>Add Messae</button>
      </div>
    </div>
  );
};
un nuyn@ profileContainer-um
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    ******************************NAYI STEX
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    ************************************
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    isAuth:state.auth.isAuth
})
let WithUrlDataContainerComponent = withRouter(ProfileContiner)
export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
bayc de sra tex@ karanq es if@ grenq mihat componenti mej u sax texer@ erkar grelu poxaren grenq component kamel anenq urish dzev HOC-ov
/////////////////////////////////////////////////////////////
das69 
High Order Component HOC
inq@ etqan el component chi aveli shat functia a vor@ @ndunuma component u veradarcnuma urish component bayc et veradarcra component@ unena avel feauturner aysinqn karanq mi HOC sarqenq vor@ mez het kta componentner u ira het tvac componentneri mej klini nuyn konkret et HOC-i logikan senc mi bana stacvum bayc esi chi verjnakan@ prost@ esi nayi
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    isAuth:state.auth.isAuth
})
let AuthRedirectComponent = (props)=>{
  if(!props.isAuth) return <Redirect to={"/login"}/>
  return < ProfileContiner {...props}/>
}
let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)
export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
hima arandzin file um sarqel enq esi 
export const withAuthRedirect = (Component)=>{
    class RedirectComponent extends React.Component{
        render(){
            if(!this.props.isAuth) return <Redirect to={"/login"}/>
            return < Component {...props}/>
        }
    }
    return RedirectComponent
}
u eti import enq anum stex u grum senc
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    isAuth:state.auth.isAuth
})
let AuthRedirectComponent = withAuthRedirect(ProfileContiner)

let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)
export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent); himi miqichel dorabotka kanenq vor state mej menq amen angam HOC petq ekac key chpoxancenq petqa mihat withAuthRedirect HOC@ connect anenq barda knayes withAuthRedirect fil@
tenc stacvuma ay senc xar@ hl@ chenq hanel withAuthRedirect file-i mej
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    // isAuth:state.auth.isAuth
})
let AuthRedirectComponent = withAuthRedirect(ProfileContiner)
  let mapStateToPropsForRedirect = (state) =>({
    isAuth:state.auth.isAuth
  })
  AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)


let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)

export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
withAuthRedirect.js-i mejel stacanq es tesq@
let mapStateToPropsForRedirect = (state) =>({
    isAuth:state.auth.isAuth
  })
export const withAuthRedirect = (Component)=>{
    class RedirectComponent extends React.Component{
        render(){
            if(!this.props.isAuth) return <Redirect to={"/login"}/>
            return < Component {...this.props}/>
        }
    }
    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)
    return ConnectedAuthRedirectComponent
}

vobshem mi vori ban
//////////////////////////////////////////////////////////////
das70
COMPOSE
es ancac dasi cod@ aveli karch grelu hamar  compos@ redux-ic petqa import anel 
ancaci tesq@ Dialogs-i meji darav senc 
const DialogsContainer = compose(
  connect(mapStateToProps, mapDispatchToProps),
  withAuthRedirect
)(Dialogs)
**************************************
// let AuthRedirectComponent = withAuthRedirect(Dialogs)
// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);
***************************************
export default DialogsContainer;
compos@ vercnuma Dialogs@  skzbic qcuma withAuthRedirect-i mej ashxatuma heto qcuma verevi connecti mej ashxatuma isk profileContainer-um exav senc
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}

let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
})
/*
*****************************************************************
let AuthRedirectComponent = withAuthRedirect(ProfileContiner)
let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)

export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
********************************************************************
*/
export default compose(
  connect(mapStateToProps, {setUserProfile,getProfile}),
  withRouter,
  withAuthRedirect
)(ProfileContiner)
u nuynel users-um 
*///////////////////////////////////////////////////////////////////////
DAS71 setState, localState
componentner@ karan unenan localState texayin aysinqn classi mej sarqum enq state class ProfileStatus extends React.Component {
  state = {
    editMode: false
  }; 
  activateEditmode() {
      debugger
    this.state.editMode = true
  }
  render() {
    return (
      <>
        <div>{!this.state.editMode && <span
            onDoubleClick = {this.activateEditmode.bind(this)}
        >{this.props.status}</span>}</div>
        <div>{this.state.editMode && <input value={this.props.status} />}</div>
      </>
    );
  }
}

export default ProfileStatus; senc bayc stat@ poxeluc ushadir exi petqa urish functia kanchenq vor haskana vor stat@ iskakanic poxvela karanq ogtagorcenq nuyn functia-i mej vor@ ashxatuma onDoubleClick i vaxt 
activateEditmode() {
      this.setState({
        editMode:true
      })
    
  }
  ay senc kamel shat cayrahex petq ekac depqum this.forceUpdate() hishi vor setState@ asinxron a 
  /////////////////////////////////////////////////////////////////////
  das73
  zaprosner@ put u post@ hnaravorutyun unen objectner danninner uxarkel server put@ uxarkeluc karanq erkord parametr tanq iran json-i tesqov
  ///////////////////////////////////////////////////////////////////////
  das74
  componentDidUpdate
  stanuma 2 argument prevProps u PrevState
  componentDidUpdate-um setState@ petq lini mihst inch vor paymani mej teche max depth ashibkaya talis
  /////////////////////////////////////////////////////////////////////////////
  das75 
  Redux-form 
  redux-form@ library a vor@ storei mej qcuma ira state
  install enq anum u import enq anum redux store-um u combineReducersersi mej poxancum enq senc form:reducer
  import { reducer as formReducer } from 'redux-form'
  form:formReducer petqa partadir form lini grac vor ashxati
  u im formi component@ patatum enq reduxForm sra mej connecti nman ay senc
  const LoginReduxForm = reduxForm(
    {
      /// amen formen petqa unena anun ay senc vor@ graca form keyi mej
        form:"login"
    }
)(LoginForm)
vor former@ kpcnum enq iranc normal ashxatelu hamar vorpeszi inputeri vra onChange chdnenq hishi fluxi masin input-i tex@ ogtagorcum enq hatuk tager Fielder ay senc
const LoginForm = (props)=>{
    return(
        <>
            
            <form onSubmit = {props.handleSubmit} >
                <div>
                    <Field type="text" placeholder={"Login"}
                        component = {"input"}
                        name = {"Username"}
                    />
                </div>
                <div>
                <Field type="password" placeholder={"Password"}
                component = {"input"}
                name = {"Password"}
                />
                </div>
                <div>
                <Field type={"checkbox"}
                    name={"remember me"}
                    component={"input"}
                /> remeber me
                </div>
                <div>
                    <button>Log In</button>
                </div>
            </form>
        </>
    )
}
const LoginReduxForm = reduxForm(
    {
        form:"Login"
    }
)(LoginForm)
ay senc grecinq hima mez LoginForm-i propserum galis liq@ ban mez petqa handleSubmit callback@ u form graci mej eti dnum enq  onSubmit = {props.handleSubmit}
bayc petqa container componentin vor mej patatel einq mer form@ tanq onSubmit@
const Login = (props)=>{
    const onSubmit = (formData) =>{
        console.log(formData);
    }
    return(
        <>
            <h1>Login</h1>
            <LoginReduxForm onSubmit = {onSubmit}/>
        </>
    )
}
mer formen kanchuma handleSubmit@ isk mer poxancac funcian kashxati kkanchvi handleSubmit-i koxmic u ira mej vorpes argument objecti tesqov kgan danniner@
///////////////////////////////////////////////////////////////
das76
redux-form@ dnum enq message-i u mnacaci hamara shat lav bana el menq et flux krugavarot@ dzerov chenq sarqum sax avtomat anuma isk menq value-n vekalum u dnum enq biznesi mej bayc hima greluc input@ chi maqrvum eti kuxenq
/////////////////////////////////////////////////////////////////
das77
validators
sarqecinq arandzin papki mej validators.js meJ@ gr@m enq funcianer@
export enq anum u Fieldin poxancum enq ay senc
<Field  component="input" name="newPostText"
    validate = {[required,maxLengthCreator(10),minLength15]}
  />
  required@ maxLength15 minLength15 mer funcianeri anunnerna 
  dranq karanq grenk thunkeri nman zamikaniaov vor amen amgam tarber lengtheri hamar taza code chgrenq ay senc orinak grenq
export const maxLengthCreator =(maxLength)=> (value)=>{
    if(value.length > maxLength) return `Max length is ${maxLength}  Symbols`;
    return undefined;
 
}
let maxlength10 = maxLengthCreator(10)
const MyPostForm = (props)=>{
  return <form onSubmit={props.handleSubmit}>
  <div className={s.item}>
  <Field  component="input" name="newPostText"
    validate = {[required,maxlength10]}
  />
  <button>Add Post</button>
</div>
</form>
}
bayc es maxLength@ petqa durs hanel senc ban sarqel vor arrayi mej henc kanchum es maxDeepth ashibkaya talis vorovhetev component@ amen angam rendera linum u amen angam kanchuma eti

arandzin texer sarqum enq componentner
export enq anum u vortex vor grum enq field @tex component = {u et component@ vor@ vor arandzin sarqel enq}

export const Textarea = ({input,meta,...props}) => {
    
    return (
        <div>
            <textarea
                {...input} {...props}
            />
        </div>
    )
}
esi nayi 
Field@ mez meta ela poxancum dra mijocov mer componentin vor arandzin texa grvac u poxancaca field-in karanq asenq iran vonc pahi meta mej error touched ban ay tenc banera 
export const Textarea = ({input,meta,...props}) => {
    const hasError = meta.touched && meta.error 
    return (
        <div className = {s.formControl + ' ' + ( hasError ? s.error : '')}>
            <div>
            <textarea
                {...input} {...props}
            />
            </div>
           {hasError && <span>{meta.error}</span>}
        </div>
    )
}
//////////////////////////////////////////////////////////
das78 login saytic
//////////////////////////////////////////////////////////
das79 stopSubmit reduxForm i mejic functia a
gr@m enq senc
export const login = (email,password,rememberMe)=>{
  return(dispatch)=>{
    authAPI.login(email,password,rememberMe)
    .then((response) => {
            
      if(response.data.resultCode === 0){
        dispatch(me())
        
      } else{
        let action = stopSubmit("Login", {email:"Wrong Email"});
        dispatch(action)
      }
     
   
      
 });
    
  }
}
else-i mej dispatch enq anum et functian 
araji parametr@ iran poxancum enq formayi anun@ logini formayi anun@ Login ei drel 2rd ov fielderi anunner@ orinak logini mej ka email u password fielder@
bayc arji senc grel vor obshi ashibken cuyc ta 
let action = stopSubmit("Login", {_error:"Common Error"})

hajord dasin miqich kuxenq sax initialization kanenq
////////////////////////
das80
app-n connect-ov enq patatum bayc qani vor appi mej routerner kan vor inq@ chisht ashxati mihatel app-n petqa withRouter ov patatenq sarqecinq arandzin appreducer
mej@ esa 
import { stopSubmit } from "redux-form";
import { authAPI, usersApi } from "../API/api";
import { me } from "./auth-reducer";

const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';

let initialState = {

    initialized: false


};

const appReducer = (state = initialState, action) => {
    switch (action.type) {
        case INITIALIZED_SUCCESS:
            return {
                ...state,
                initialized: true

            }

        default:
            return state;
    }
};

export const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })

export const initializeApp = () => {
    return (dispatch) => {
     let dispatchResult =   dispatch(me())
        dispatch(initializedSuccess())
    }
}
export default appReducer;


//////////////////////
nayi dispatch(initializedSuccess()) es tox@ petqa lini menak 
arajin tox@ lineluc heto dra hamar promisa petq dra hamar authreducerum grel enq senc 
//////////////////////////


export const setAuthUserData = (id,email,login, isAuth)=>({type:SET_USER_DATA,payload:{id,email,login, isAuth}})
export const me = ()=>(dispatch)=>{
   //********return authAPI.me()
    .then((response) => {
            
      if(response.data.resultCode === 0){
        let {id,email,login} = response.data.data
        dispatch(setAuthUserData(id,email,login,true))
      }
     
   
      
 });
    
  }

  nayi return authAPI.me() es tox@  
  en mekum el senc enq grum arden 

  export const initializeApp = () => {
    return (dispatch) => {
     let promise =   dispatch(me())
     promise.then(()=>{
        dispatch(initializedSuccess())
     })
        
    }
}
aysinqn menq hima nenc arecinq vor serverin zaprops uxaki et zapros@ ga heto nor baci ej@
////////////////////////////////////////////////
das81 selectorner
selectorner@ functianer en vor stanum en state@ vercnum en inch petqa u talis en mez sarqecinq users_selectors.js
 export const getUsersS = (state)=>{
 return state.usersPage.users
}

export const getPageSize = (state)=>{
    return state.usersPage.pageSize
   }

   
   export const getTotalUsersCount = (state)=>{
    return state.usersPage.totalUsersCount
   }
   
   export const getCurrentPage = (state)=>{
    return state.usersPage.currentPage
   }
   export const getIsFetching = (state)=>{
    return state.usersPage.isFetching
   }
   export const followingInProgres = (state)=>{
    return state.usersPage.followingInProgres
   }
   @ndex el sranic poxecinq 
   // let mapStateToProps = (state) => {
//   return {
//     users: state.usersPage.users,
//     pageSize: state.usersPage.pageSize,
//     totalUsersCount: state.usersPage.totalUsersCount,
//     currentPage: state.usersPage.currentPage,
//     isFetching: state.usersPage.isFetching,
//     followingInProgres:state.usersPage.followingInProgres
//   };
// };
ayyy sraaaaaaaaan
let mapStateToProps = (state) => {
  return {
    users: getUsersS(state),
    pageSize: getPageSize(state),
    totalUsersCount: getTotalUsersCount(state),
    currentPage: getCurrentPage(state),
    isFetching: getIsFetching(state),
    followingInProgres:followingInProgres(state)
  };
};
