daser vor petqa krknel
DAS 26
//////////////////////
das 16 props
component@ et funcia a vor heta talis jsx razmetka
bayc menq grum enq iran tegi tesqov
react@ ashxatacnuma et funcian
componentmel funciayi nman kara stana argumentner
defaultov misht react@ datark object a poxancum componentin
qani vor componentnner@ grum enq atribunerov karanq atribut avelacnenq orinak post@ grenq <post name="anun" age="tariq"/>
eti kpoxancvi componentin vorpes argument jsx-i mej ete uzumes
javascript gres petq sranq dnes {}
*******************************************************
das 19 routing
petqa paket ustanovka anenq sra hamar skzbic $ npm i react-router-dom bayc node nenc petqa anenq vor gitignore chlini 
aysinqn uxarkeluc inqnel gna git petqa grenq  $ npm i react-router-dom -save vor gna package.json-i mej vor hetaga
ogtagorcoxner@ karenan iranq el install anen et install aneluc heto app.js grum enq <Route/> component@ ay senc 
<BrowserRouter>
    <Route component = {Dialogs}/>
    <Route component = {Profile}/>
</BrowserRouter>
sax ej@ petqa wrap anenq <BrowserRouter> i mej
nax petqa linkerin href grel <a href="/profile">Profile</a>
heto route mej nshel
<Route path="/profile" component={Profile}/> path@
rout@ hetevuma urlin ete url-um gruma profile inq@ profile componentna
zagruzka anum
*************************************************************
das 20
nenc enq anum vor ejer@ poxeluc glxavor ej@ reload chlini 
es dasi mej sax a-er@ poxum enq navbarum grum enq <Navlink hrefi texn el grum enq to='/profile'></Navlink> navlink@ eli component a eli importov
esi arden kochvuma SPA single page application bayc console-i mej
inq@ <a></a>   a mnalu vor nayes nuyn href-ov prost@ et funcia aveli chisht componenti mej verjum graca preventDefault() defaultov a misht reload er anum stranicen eti graca vor chani
u navlink@ defaultov a tegin avelacnuma active class@
ete xarnvuma classner@ karanq navlink i mej grenq
activeClassName u tanq mer uzac class@
navlink@ poxuma url@ isk Route component@ vor ancac dasin grel enq 
app.js-mej hetevuma urlin u zagruzka a anum ira mej nshvac component@
/////////////////////////////////////////////////////////////
*************************************************************
das 21
Dialogs ej@ tetev verstka
/////////////////////////////////////////////////////////////
*************************************************************
das 22 Route exact
Dialogsin Navlinker avelacrecinq nayel anpayman to-n vonca grac
mejner@ /dialogg/3 demi dialog@ graca vor dialogs ej@ chpoxvi
url-um
ete uzumenq vor en vaxt erb vor url-um graca /dialogs/1 et vaxt
cuyc chta konkret dialogs ej@ petqa app.js-um grac Rout@ sarqenq
senc <Route exact path="/dialogs" component={Dialogs}/>
avelacnenq exact bar@
//////////////////////////////////////////////////////////////
**************************************************************
das23
dialognerni meji grac diver@ poxecinq componentnneri u 
ashxatecinq componentnneri propserov u nuynnel messagneri het
u miqichel profile@ u miqichel poster@ poxecinq
//////////////////////////////////////////////////////////////
**************************************************************
das 24
patrastvum enq vor mapov poxancenq propser@ componentnnerin
es dasin aranc mapi prost@ stexcum enq massivner u grum propsin
poxancvelu tex@ hajordin ksarqenq map-ov vor poxancvi u ruchnoy
etqan chgrenq vabshe chisht chi ruchnoy UI u BLL senc hardcode em arel
hajordin sax kuxenq
//////////////////////////////////////////////////////////////
**************************************************************
das 25
sksum enq ashxatel mapov poxancel propser@ react-um vor jsx-i mej 
grum enq zangvac es {} sranc mej inq@ sax kpcnum irar toxov cuyc a talis
zangvaci mej karanq dnenq henc component@ tenc kashxati tox chi sarqi
karanq senc anenq 
let elementsData = [
  <DialogItem name={dialogsData[0].name} id={dialogsData[0].id} />,
        <DialogItem name={dialogsData[1].name} id={dialogsData[1].id} />
]
u arden jsx - mej grenq {elementsData}  u kashxati 
es grel ei senc       
 {dialogsData.map((elem => {
          return (
            <DialogItem name= {elem.name} id = {elem.id} />
          )
        }))}
        bayc es mer axper@ asum taza masiv stananq heto eti grenq
         let elementsData = dialogsData.map((elem => {
  return (
    <DialogItem name= {elem.name} id = {elem.id} />
  )
}))
        u jsx- mej {elementsData}
///////////////////////////////////////////////////////////////
***************************************************************
das 26
hishecinq strukturan noric bajanecinq dialogi componentnner@
u karevor eli baner petqa esi krknel u tetev redux-i masin  
19:00ic; BLL-ic u Reduxic galis UI UI-nel reactna nkaruma cuyca talis mez
danniner@ petqa linen urish tex voch te UI-um henc himikva gracov
danniner@ UI mej mypost mej graca heto kuxenq hl@ vor chgitem vonc
 componenti mej danniner petq chi grac linen
//////////////////////////////////////////////////////////////
**************************************************************
das27
app- mej grac route@ poxum enq es tesqic 
<Route path="/dialogs" component={Dialogs} /> 
darcnum enq senc 
<Route path="/dialogs" render={()=><Dialogs/>} />
sax arvuma nra hamar vor karenanq es etapi vra danniner@ grenq index.js
um heto propsov poxancenq app.js-in u ira mejic el poxancenq et componentin u inqnuruyn porcum enq sax texapoxel app.js himma commit kanem aa
//////////////////////////////////////////////////////////////
**************************************************************
das 28 arecinq sax taranq index-js i mej commit araca
//////////////////////////////////////////////////////////////
**************************************************************
das 29
danniner@ hanum enq index.js-ic qcum enq state.js-mej petqa state.js@ import  anenq index.js i mej heto sksenq dranic vonc haskaca reduxi
nman ban enq uzum stananq hl@ reduxic vabshe texyak chenq
taranq danniner@ state.js poxancecinq aveli akuratni objectneri mijocov
 karas het tas nayes commit@
/////////////////////////////////////////////////////////////
*************************************************************
das31 
sovorakan javascript-um menq ashxatum enq DOM-i het isk reactum
ka virtual DOM u menq ashxatum enq virtual DOM-i het isk henc DOM-i 
het ashxatuma react@ aysinqn menq petqa xusapenq en depqeric erb 
vor henc menq enq ashxatum DOM- het petqa tanq virtual DOM-in 
react@ vercni ev ashxati iskakan DOM-i het aysinqn reactum chenq grum
document.getElementByID petq chi grel vabhse hl@ vor parz chi es metod@
chishta te che bayc hima senc enq anum react@ uni funcia
let newPostElement =  React.createRef()
ssilka a sarqum depi et teg@ hima tenc enq porcum anel u et pahum enq popoxakani mej u vorpes atribut ref={newPostElement} grum enq tagi mej
u vsyo inq@ kpav et tegin heto ete orinak text area-i mejic uzum enq 
stananq value grum enq orinak senc 
let text = newPostElement.current.value
/*current@ stex asuma vor henc et elementi 
masina xosq@ bayc itogum esi asuma vor referov meka eli ashxatum enq DOM-i
het voch te virtual DOM-i het
/////////////////////////////////////////////////////////////
*************************************************************
das32
componenti propserov funcia enq poaxncum state-um grum enq bayc chgidem xi
grecinq objectic durs u petq iran export anenq aran defaultov ay senc grelov
export let addPost = (postMessage) =>{
    let newPost = {
      id:7,
      message:postMessage,
      likes: 0
    };
    state.profilePage.posts.push(newPost)
  } aysinqn export grecinq demic ira u import@ index.js petq senc anenq
  import {addPost} from './Redux/state'; pakagcerov es depqum importi
  vaxt anun@ petqa chisht grel nuyn@ hima lava qcecinq poxancvec normal
  bayc mi ban ka index.js i mej vor graca  ReactDOM.render(
  <React.StrictMode>
    <BrowserRouter>
    <App appState={state} addPost={addPost}/>
    </BrowserRouter>
  </React.StrictMode>,
  document.getElementById('root')
); aysinqn inq@ vercnum u mi angam nkaruma sax state@ u vsyo isk dra masin
myus videoe-um kxosanq u es das@ arji eli nayel
///////////////////////////////////////////////////////////////
***************************************************************
das33
dobavlenia posta na stenu Render-i masin vonc rerender anenq
dra hamar arji taza funcia grel et es dasi hamara vabshe bayc chgitem et
chishta te che dra hamar index.js @ grum enq senc 
let rerenderEntireTree = () =>{
  ReactDOM.render(
    <React.StrictMode>
      <BrowserRouter>
      <App appState={state} addPost={addPost}/>
      </BrowserRouter>
    </React.StrictMode>,
    document.getElementById('root')
  );
}
rerenderEntireTree()
aysinqn dnum enq funciayi mej bayc ban@ ena vor index.js-ic chenq kara
iran import anenq state.js u grenq nra funcianeri mej dra hamar petqa 
sarqenq mihta arandzin render.js file u dra mejic import anenq et 2 tex@
state.js index.js
bayc mihat taza knayes esi ciklayin xaxtumneri masinela xosum vor stat@
chen kara mi qani tex import anenq aysinqn renderi mej petq chi state lini
renderi mej graca prost@ funcian aranc kanchelu dra hamar stat@ petqa grenq
kanchox texum import anenq iran tvyal depqum index.js-um import anenq
////////////////////////////////////////////////////////////////////
********************************************************************
das34
himkva aracov poxvuma UI@ bayc state@ chi poxvum add post sxmum enq avelanum
a bayc state@-i mej ban chi poxvum dra hamar ej@ vor refresh enq anum 
koruma post@ voncvor esi bacatruma asenq unenq text area dra mejin@
sax petqa ga BLL-ic state-ic aysinqn uzuma asi vor text arean uzum enq poxenq asenq grecinq mi tar mej@ eti gnuma Bll aysinqn state @ndex 
poxvuma u heta galis UI poxecinq bayc shat vata ashxatum u chem haskanum
xi {uxecinq sarqecinq input mejnel vorpes atribut grecinq autoFocus="true"}
/////////////////////////////////////////////////////////////////////
*********************************************************************
das 35
ciklayin zavisimost petq chi vor lini orinak es index.js inch vor ban em 
import arel render.js-ic render.js el cankali chi vor es import anem 
index.js-ic funcianer@ vor@ menq poxancum enq inch vor mekin vor kanchi
kochvuma callback funkcianer vobshem vor ciklayin zavisimost chlini 
importi tex@ funciayi argumentov enq poxancum urish funkcian darav callback
tes state.js @ heto argumentin talis enq popoxakan ay senc
let rerenderEntireTree
  export const subscribe = (observer) =>{
    rerenderEntireTree = observer
  }
  kochvuma pattern petqa kardal dra masin observer petqa patternner@ nayel
  ////////////////////////////////////////////////////////////////////
  ********************************************************************
  das 37
  state@ qcum enq store object-i mej vor oop-in nmanvi bayc stex mihat
  ban ka menq stat@ kacnhum enq getterov isk getteri mej graca this
  u getter@ kanchum enq index js-um petq ushadir linel this-i het
  callback-i vaxta haram linum erb vor kanchum enq iran ay senc ()
  nayi aysinqn menq propsner@ poxancelov gnum hascnum enq mypost-in
  u dusa galis vor orinak addPost@ erb vor ashxatuma  funcian mej@
  graca this bayc et this@ michev my profile-ov poxancvac object-ina
  verabervum arden dra hamar amenaskzbic poxanceluc index.js-um petqa
  iran bind anenq store-in ay senc addPost={store.addPost.bind(store)
  ay sen hima bind araca u iran vor kanchenq arden kpaca store-in
  u this@ kashxati store-i hamar
  MENQ HIMA MER ARANZIN REDUXN ENQ SARQUM HETO KANCNENQ ISKAKAN REDUXIN
  ////////////////////////////////////////////////////////////////////
  ********************************************************************
  das 38
  Disaptch vonc haskaca sax metodner@ poxum enq Disaptch() metodeov
  vorovhetec karoxa menq unenanq orinak mi 200 hat funcia u dranq
  hertov componentnnerin poxacnel@ etqan el harmar chi Disaptchin
  petqa poxancel argumenq defaultov anun@ dnum enq action 
  et object@ petqa unena type svoystvan mej@ grac vor funcian petqa
  ashxati aysinqn senc
      dispatch(action){
      if(action.type === "ADD-POST"){
        this.addPost()
      }else if(action.type === "UPDATE-NEW-POST-TEXT")
      this.updateNewPostText() //chmoranas this-i arandznahatkutyunneri masin//
    }

    sax poxecinq funcianer@ drecinq dispatch-i mej u hima liq@
    funcianer poxancelu tex@ poxancum enq mihat dispatch
    orinak my postic ay senc
        let addPost = () => {
      props.dispatch({type:"ADD-POST"})
    }
    ///////////////////////////////////////////////////////////////////
    *******************************************************************
    das 39 action creator
    sarqecin state . js -um action creatorner vor amen angam dispatchi 
    mej menq ruchnoy chgrenq voch mi ban ayl unenq funcia vor@ avtomat
    generacnuma et object@ aranc sxalneri normal stacvuma u state-i mej
    actionnerin typer@ grecinq const erov vor vaabshe sxalvelu dzev chlini
    ///////////////////////////////////////////////////////////////////
    *******************************************************************
    das 40 krknutyun inch ancel enq
    u dialogsum avelacnum enq state-ic ekacox input sendov
////////////////////////////////////////////////////////////////////////
***********************************************************************
    das41 reducer
    reducerner@ katarum en gorcoxutyun poxum en state@ u veradarcnum en poxvac
    state@ arandzin faylum a linum vabshe sranq amen mek@ ira hamar poxecinq
    if elsernerl meji poxecinq switch caseerov dispatchin enq poxancum actionner@
    amen angam sax ashxatum a tenuma inch action a mej@ u eti a anum senc dispatch@ chi mecanum u actioncreatornern el enq texapoxum reducerneri mej
    u reducer@ stanuma state-i en hatvac@ vor@ iran petqa
    u if elseri pahov karanq poxenq switch caserov
    /////////////////////////////////////////////////////////////////////
    ********************************************************************
    /////////////////
    dispatch-i masin nayi dispatch@ ka reduxi store-um @ndex combiner reducersa arac u tenc sarqvaca state sax araca cherez dispatch erb vor menq amen angam gorcoxutyun enq anum dispatch@ ashxatacnuma sax reducerner@ vori action-i type@ brnec enel ashxatuma mnacacacn el en ashxatum prost@ iranc action-i type@ chen stanum dra hamar veradarcnum en iranc defaultov grac argument stat@
    ashxateluc heto dispatch@ kanchuma subscribe@ (store.subscribe()) dra mejel menq index js-um grel enq store.subscribe(()=>{
  let state = store.getState()
  rerenderEntireTree(state)
})
    /////////////////
    das42 Redux
    nax poxecinq state.js@ store.js-i u install enq anelu redux@ $ npm install redux --save senc reduxov commadnov karanq sarqenq stor@ vor@ menq ruchnoy
    einq sarqel sarqum enq reduxStore.js mej@ senc
    import {createStore} from 'redux'
    let store = createStore()
    et aneluc heto reducerner@ combine enq anum eli funciayov
    bayc reducernerin petqa hima amen angam defaultov inch vor state ga orinak
    profilePageReducer in stati meji profilePage objectneneq poxancum defaultov
    index.js um unenq store.subscribe ashxatuma amen angam vor inch vor ban enq 
    porcum poxel dra hamar iran petqa tanq reducernerEntireTree funcian vor amen
    angam ban poxeluc ashxati rerenderEntireTree-n u vorpes argument stana store.getState()
                        store.subscribe(()=>{
                      let state = store.getState()
                      rerenderEntireTree(state)
                                                })
    sarelu hamar
//////////////////////////////////////////////////////////////////////////////////
das43 container components
imast@ ena vor component@ chstana avelord informacia store-ic orinak dispatch chstana urish dzev lini mer komponentner@ himikva dumb componentner en presentacion iranq cankali a vor store u dispatch chstanan dra hmar petqa stexcel
container component vor mej klini presentacion component@ container componentin kga props@ container componentin kga props state-ov u dispatch-ov isk presentacion
componentin kga current value mekel onChanged funcian sarqenq mypostContainer.jsx
inq@ kara maqur component chlini qani vor petqa propsner stana ira mej container component@ return a anum presentacion component@
//
das44
esi imanalu hamar dasa hl@ chenq ogtagorcelu senc dzevov
Context API Context@ nenc ban vor roditelski component@ aysinqn mer depqum App
kara unena Context vori mej linen danniner u et dannineric karenan ogtven bolor@ meji mejinner@ daje aysinqn stor@ karanq aranc propseri poxancenq bayc Context@ global baneri hamara Context@ sarqvuma funciayov orinak senc const const StoreContext  = React.createContext(null) defaultov value tox lini null esi voncvor component lini heto index js-i mej app-n wrap enq anum ay senc<StoreContext.Provider value = {store}>
      <App state={state} dispatch = {store.dispatch.bind(store)} store={store}  />
      </StoreContext.Provider>
      u karanq el App-in vabshe ban chpoxancenq sax anenq Contextov isk stacoxin petqa wrap anenq <StoreContext.Consumer>
      isk mejnel ay senc (argument vor@ value-n a ) =>{
        return (
          stex el mnacac componentner@
        )
      } esi anonim funcia a componenti mej
      </StoreContext.Consumer> ete aneluc apush ashibka a berum render is not a funcion nayi videon 21.50 ic u eli baner ka knayes heto sarqecinq <Provider/>
      es bard baneri tex@ ka biblioteka react-redux eti kogtagorcenq react-redux@
      parzacnuma redux@ 

      ////////////////////////////////////////////////
      das45
      npm install react-redux --save
      nuyn dzev uni zavodskoy <Provider></Provider> containeri mej petqa connect anenq eti funcia a vori mijocov sarqum enq container component 
      orinak senc const SuperDialogsContainer = connect () () mi angam connect@ ashxatec erkrord angam araji ashxateluc heto het veradarcrec funcia erkrod pakagcer@ verabervuma connect() ira veradarcrac funciayin dran poxancum neq en komponent@ vor vor uzum enq wrap exac lini ira mej aysinqn ete uzum enq SuperDialogsContainer-i mej wrap exav lini Dialogs@ grum enq connect () (Dialogs) isk connect-i araji pakagceri mej poxancum enq funcianer voronq veradarcnum en objectner@ aysinqn orinak senc let mapStateToProps = ()=>{
        return {a:2}
      }
      connect(mapStateToProps,mapDispatchToProps)(Dialogs) dialogsi propserum gnalua a anunov props mejin@=2
      isk f1@ kancheluc stanalua argument avtomat mej@ @ngnuma state@ erku hat funcia enq sarqum arajin mej danninerna erkrodi mej callbacker@ mapDispatchToProps@ mej@ vorpes argument stanalu a dispatch@
      ///////////////////////////////////////////////////////////////////
      das46
      de menq gitenq vor erb object es haytararum let a = {name:k,
      obj1:{name:l,age:5}}
      a-n stex uxaki hasceya depi et object@ aysinqn ete es senc anem let b = a
      b-n el kdarna hasce depi et object@ aysinqn ete grem b.name = hhh eti kpoxvi a- mejel ete tenc chenq uzum anenq karanq senc anen let b = {...a} spread operatorna bayc es copian poverxnostnia aysinqn ete senc em anum objecti meji menak primitiv danninerna copy linum isk a-i meji objectner@ eli ssilkova mnum ete menq uzum enq lriv arandzin copy anel petqa anel senc
      poverxnostni arecinq hima kanenq senc b.obj1 = {...a.obj1} senc irar het kap chunen nuyn@ verabervuma massivnerin
     //////////////////////////////////////////////////////////////////////
     das47
     determirinovannost aysinqn danni es uxarkum return@ petqa durs galuc urish lini maqur funcianer en reducerner@ funcional componentner@ functian ira meji ekac danniner@ iravunq chuni poxi copy a anum copu arac@ poxuma eta return anum menq en vaxt amen poxeluc sax dom@ taza einq nkarum isk connect-ov erb vor kpcnum enq inq@ ira sepakan subscribe-i dzev@ uni vor ete asenq te tan@ anmex erexeq@ qnac    vor@ ete mypost-um mi ban poxvec menak mypost-na taza nkarum amen angam erb state-um popoxutyuna linum ashxatuma connectin poxancvac mapStateToProps functian u stanum en nor object u hamematvum en hni het ete ban chi poxvel chi nkarum taza nayi hima stex mer problem@ ena orinak my posti mej ka posts masiv@ connect-i et funcian ashxatuma hamematvuma qani vor ssilkeq@ hni het nuynna ira tvuma te havasara eti u taza chi nkarum dom@ menq arka objectner@ iravunq chunenq poxenq dra hamar petqa copy anenq hima eti kanenq profilePageReducer-um sarqum ebq state-i copy amen casi- hamar arandzin ushadir et pah@ aveli lav dzevov karas copy anes bayc et heto myus dasin vobshem stex lriv galisa nran vor sax dom@ noric pererisovka chlinelu hamar copy enq anum objectner@ 
     ushadir exi nran vor masiv@ copy arecir taza bayc masivi meji hin objectner@ eli mnacel en nuyn HIN OBJECTNER@

     ////////////////////////////////////////////////////////////////////
     das48 
     esiminch charecinq push@ urish dzev enq grel miqich el kodn enq qchacrel refactoring arecinq u stateCopy popoxakanner@ hanecinq prost@ aranc anun object return arecinq
     ///////////////////////////////
     das49
     sarqeciqn users reducer@ meji bard logikayov
     ////////////////////////////////////////////////////////////////////////
     das50 
     REST API
     application programm interface interface orinak ena orinak avotyi ruyl@ pedalner@ interface a hamarvum enc orinakov vor haskanas orinak reacti interface-i tetev orinak importner@ orinak brauseri meji knopkeq@ orinak document.getElementByID interface a orinak objectnernel unen interfacer iranc meji zavodskoy funcianer@ ka cragravorman server vor@ kara grac lini node.js-ov apachov NGINX-ov u nman banerov amen server uni endpointner urish dzevov asac url hascener endpointnernernel unen get/post http codern en 404 not found 5xx (aysinqn 500ner@)- server error 3xx-redirect 2xx-OK esi server API- a ka nayev REST API senc karas mi endpointin uxarkes https://orinak.com/api/users - u senc -get/post/put/delete menq kogtagorcenq axios gradaran@
     grelu enq senc 
     axios.get('https://orinak.com/users') ashxatacnuma heta talis mez danniner
     et danniner stexa .then((data)=>data) (datan - a )
     ///////////////////////////////////////////////////////////////////////////
     das51
     Users API zapros enq anelu userneri cucak@ server-ic  container component@ zaprosa anelu install enq anum axios@ arecinq zapros@ theni mej data vor graca et datan ovject a galu mej@ mer requesti masin liq@ iformaciayov mez petqa ete datayi meji data aysinq data.data.items etia ekel mez serveric
     ///////////////////////////////////////////////////////////////////////////
     das52
     SIDE EFFECTS 
     menq  presentacion component- mej zapros uxakecinq server tenc chi kareli anel presentacion funcian petqa presentacia ami menak henc uxix dzevov dom chpoxi dispatch-ov poxi presentacion component@ petqa lini maqur funcia
    /////////////////////////////////////////////////////////////////////////////
    das53 
    Class component
    sksenq funcional componentic eti functia a aysinqn ete eti functia a uremn petqa iran kanchel inq@ stanuma props het a talis jsx classner@ petq en vorpeszi sarqen odnotipni objectner orinak eng grum classi
    class Man {
      constructor(name,age){
        this.name = name
        this.age = age
      }
      render(){
        return ()
        <div>
        {this.name},{this.age}
        </div>
      }
    }
    class@ funcia a 
sarqum enq sranic nor object
let man1 = new Man('Dima',31)
stacvec senc man1 = {name:"Dima",age:31} u uni render metod
karanq ogtagorcenq et metod@
orinak man1.render() het kta esi
bayc de react mej classi constructor-in karanq poxancenq props object Reacti mej
classic object sarqeluc petq chi grenq asen new Man karanq grenq <Man name='samurai'/> react@ ksarqi eti u render@ avtomat kani bayc react mej component@ petqa extend ani React.Component@ vor unena ira bolor metodner@ menq classneri mej metodner@ aveli lava senc anenq orinak Onclick = () =>{} voch te senc Onclick ()=>{} araji depqum bindi het xndir petqa vor chunenanq amen class@ petqa unena render metod@
//////////////////////////////////////////////////////////////////////////////////
das54 
componenti zhiznenni ciklner React component@ vor extend a anum mer componentner@ uni ira mej@ liq@ metodner orinak componentDidMount() componentDidUpadte() componentDidMount linuma en vaxt erb vor component@ render a exel razmetken haytnveka ejum karanq dra mej mer logikan grenq eta zhiznenni cikl@ cnvec ashxatec componentDidMount@ ka componentUnMount es tipi voncvor etel en routeri vaxt orinak hanec drec urish ban ashxatec componentWillUnmount u vabshe chishta lriv side EFFECTS ner@ anel componentDidMount-um componentDidUpadte -um componentDidMount@ linuma mek angam isk componentDidUpadte amen angam poxelis isk component@ jnjeluc aysinqn mi componenti tex@ erb vor petqa nkarvi urih component
//////////////////////////////////////////////////////////////////////////////////
das55
pagination
server@ mez danniner@ talisa porcianerov serverum ka baza danniner orinak graca SQL kam mongo DB-ov xar@ menq server uxarkum enq orinak http get: 'api/users?pageNumber=2' talisa mez erkrod ej@ menak karoxa asenq server defaultov draca
vor amen agam page-um ta 5 hogu anun bayc menq karanq eti poxenq zapros@ poxelov orinak senc'api/users?page=1&pageSize=3 kara lini xare pageSize- tex@ kara lini limit, take documentaciayi mej klini grac serveri isk knopkeq@ vonc cuyc tanq menq
dra hamar petqa sax informaciain imananq u bajanecinq qani hat vor uzum enq ej unenanq orinak mer projecti zapros-um grecinq senc "https://social-network.samuraijs.com/api/1.0/users?page=4&count=2" het ekav 4rd ej@ u ejum 2 hogi @ndamen@ vabshe imaci vor render@ otrisovka chi anunm inq@ prost@ jsx razmetka a het talis eji chapnel hima grum enq state-um heto total coutn@ userneri kbajanenq eji chapin u khaskananq qani eja petq grel nayi es sran hetaqrqir operator a
this.props.currentPage===e && s.selectedPage asuma ete esi havasara e in uremn dir  s.selectedPage lav hima sax arecinq stex nenc enq anum vor eji hamari vra sxmeluc zapros@ poxvi taza functia enq sarqum Onclick-i vaxt eti ashxatuma mej@ grum enq zapros@ bayc vor senc grenq zapros@ functian kashxati bayc zapros@ mez hin statena talu karanq argumentic vercnenq popoxakan@ u senc dnenq
onPageChanged = (pageNumber)=>{
    this.props.setCurrentPage(pageNumber);
    axios
      .get(
        `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`
      )
      .then((response) => {
        return this.props.setUsers(response.data.items), console.log(response);
      });
    console.log(this.props);
  }
  arecinq pagination@ shat vori das er kara videon noric nayes
  ////////////////////////////////////////////////////////////////////////////////////
  das56 
  eli componenti masin 
  
*******************************************************************
nayi noric Provideri masin u contexti masin u reducerner@ karevor u dispatch@ 
das64(SHAT USHADIR NAYEL MASIVI METODNEROV ESI ESIMINCHER AREC some metod@ ushadir )
u thunk-i dispatch@ objecti u arrayi gluboki copin 
*******************************************************************
//////////////////////////////////////////////////
das56
componentner@ linum en presentacion presentacioni imast@ ena vor propserov danniner stana return ani mez jsx et danninerov linum en classovi dranq classner en voric stexcvum en objectner u classovinern el ajax zaprosner u tenc baner en anum isk containerniner@ shpvum en stori het presentacion@ ptat@m enq classovi-i mej classovi-in container componenti mej u sax texapoxecinq Users_Contaoner-i mej aysinqn connecti component@ ashxatuma storei het class@ ashxatuma ajax zaprosi hamar presentacion-nn el cuyca talis sax

///////////////////////////////////////////////////////
das57
sarqum enq preloader avelacrecinq preloader@ state-um avelacrecinq isFetching hatkutyun@ ete true a cuyca talis preloader@ ete false a chi cuyc talis u eti sax grel enq ajax zaprosneri logikayum componentDidMount-um mekel ej@ poxelu functiayum hanecinq arancin component sarqecinq preloader@
////////////////////////////////////////////////////////
das58
poxum enq mapDispatch to props@ refactoring 
let mapDispatchToProps = (dispatch) => {
  return {
    follow: (userId) => {
      dispatch(followAC(userId));
    },
    unFollow: (userId) => {
      dispatch(unFollowAC(userId));
    },
    setUsers: (users) => {
      dispatch(setUsersAC(users));
    },
    setCurrentPage: (pageNumber) => {
      dispatch(setCurrentPageAC(pageNumber));
    },
    setTotalUsersCount: (totalCount) => {
      dispatch(setUsersTotalCountAC(totalCount));
    },
    toggleIsFetching: (isFetching) => {
      dispatch(setIsFetchingAC(isFetching));
    },
  };
};
let mapDispatchToProps1 =
   {
    follow: followAC,
    unFollow: unFollowAC,
    setUsers: setUsersAC,
    setCurrentPage: setCurrentPageAC,
    setTotalUsersCount:setUsersTotalCountAC,
    toggleIsFetching: setIsFetchingAC
    }
    connecti mej arajiN@ tex@ poxancecinq prost@ es object@ u chem jog@m vonc ashxatuma heto vabshe ay senc 
    {
  followAC,
  unFollowAC,
  setUsersAC,
  setCurrentPageAC,
  setUsersTotalCountAC,
  setIsFetchingAC,
}
vobshem knayes anpayman noric
aysinqn karum enq senc poxancenq isk es reacr-redux@ es connecti mijocov vekaluma sarquma functia mej@ dnum et argument@ vor@ menq UI-um poxancecinq dispatch a anum u ashxatuma avtomat maladec
////////////////////////////////////////////////////////////////////////das59
profile@ mej cuyc enq talu konkret mardu profil@ erb vor usersi vra sxmenq et mardu vra qcelu u profile/{u stex et useri id}
eti vonc haskaca tarber json filerica galu nuyn users json file@ chi 
vobshem sarqecinq profile@ hamar component connectov dranq knayes prost@ stex urish xndir ka profile@ mej img src zaprosica galis bayc render@ zaprosic shuta ashxatum aysinqn inq@ render a anum bayc hl@ zaprosi danniner@ chi ekel dra hamar image src chi karum karda dra hamar nkarvoc component-um stex profileInfo-um proverka enq grum ay senca linum
const ProfileInfo = (props) => {
  if(!props.profile){
    return <Preloader/>
  }
  return (
    <div>
      <img
        className={s.image}
        src="https://www.wpexplorer.com/wp-content/uploads/wordpress-image-optimization-guide.jpg"
      />
      <div></div>
      <div>
          <img src={props.profile.photos.small} alt=""/>
        ava+ description</div>
    </div>
  );
};
aysinqn dursa galis voncvor 2 angam nkarvi component@ 2rd angamic sax kberi if-i mej chi mtni el
////////////////////////////////////////////////////////////////////////das60
withRouter props.match.params
withRouter@ bardzr kargi component a dra masin heto 
hima menq erv bor users-um useri vra sxmum neq brauseri link@ poxvuma orinak darnuma profile/54 ay es 54@ petqa vercnenq u ogtagorcenq dra hamar ka hatuk functia withRouter onnecti component@ ashxatuma storei het class@ ashxatuma ajax zaprosi hamar presentacion-nn el cuyca talis sax mihatel component enq sarqum vor urli het ashxati aysinqn konkret stex es depqum profileContainer classovi component@ mihatel urish withRouter-i mej enq patatum esa tesq@
class ProfileContiner extends React.Component {
  componentDidMount() {
    axios
    .get(
      `https://social-network.samuraijs.com/api/1.0/profile/9`
    )
    .then((response) => {
     this.props.setUserProfile(response.data)
    });
      console.log(this.props);
  }
  render() {
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile
})
let WithUrlDataContainerComponent = withRouter(ProfileContiner) STEX USHADIR
export default connect(mapStateToProps, {setUserProfile}) (WithUrlDataContainerComponent);
himi ProfileContiner-um props@ avelacav match objectov location objectov u history objectov u staticContextov hima menq ashxatelu enq match-i het matchi mej ka params key@ eti henc profile/{ay esi params a}
dra hamar app-um enq grum params@ route-um ay senc Route path="/Profile/:userId" render={() => <ProfileContiner />} es : sranic heto inch ka gnuma params-i mej : sranic heto inch anun grenq params objecti mej tenc key a haytvelu et anunov
////////////////////////////////////////////////////////////////
das61
login
menq login exav vaxt erb vor serverin request enq uxarkum sabshenianeri dra mej mer id-n nshvac chi urish dzeva linum amen sayt@ uni cookie skseluc eti datarka cookie-n kpcnum amen zaprosin ete menq login lineluc paroln u name@ chisht enq grum cookie-i mej grvuma mer informacian kodavorvac cookie-n uni lifetime aysinqn michev erba inq@ mnalu vor saytum sxmum es remember me eti cookie-i lifetime-i heta kapvac vor@ heto ogtagorcvuma orinak message-er@ request aneluc ka 2hat cookie mek@ localhosti hamar mek@ henc API serveri mer depqum erevi himi ashxatelu enq header-het hl@ vor senc sarqum enq auth-reducer 
`https://social-network.samuraijs.com/api/1.0/auth/me` senc request enq uxarkum u erkord parametr geti mej grum enq {withCredentials:true} object petqa sra saytum reg exac linenq et vaxt cookin im brauseri meji kta mez es request@ normal {withCredentials:true} esel grum enq vorovhetev et cros anvtangutyun@ vabshe chi toxum 2 tex zapros uxarkenq bayc senc grelov karanq stex ham mer localhosti zaprosna hamel es sayti
let {id,login,email} = response.data.data es grelu dzev@ nayi anpayman destrukturizacia
////////////////////////////////////////////////////////////////////////
das62
follow unFollow baci get zaprosic ka nayev post u delete u put
.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{},{withCredentials:true})
posti mej {withCredentials:true} esi poxancum enq vorpes 3rd parametr
isk delete@ 2rd parametr hamarya sax zaprosner@ baci get-ic key en uzum
gnum enq sra sayt@ account setting goyutyun uni headers vor@ amen zaprosi het galisa vorpes parametr eli zaprosi mej petqa poxancenq karas network mej urli vra sxmes nayes ete hankarc sxmeluc heto chi poxvum gna nayi du erb vor araji angam zapros es anum userneri cucak@ et depqum ,{withCredentials:true esi vorpes parametr poxancaca te che 
verjnakan sra tesq@ keyov exav senc
{u.followed ? (
                <button onClick={() =>{
                  
                  axios
                  .delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{withCredentials:true,headers:{
                    "API-KEY" : "560961f6-c212-4142-b02d-d99d0a8308d3"
                  }})
                  .then(response=>{
                    if(response.data.resultCode === 0){
                      props.unFollow(u.id)
                    }
                  })
                   }}>

                  Unfollow
                </button>
              ) : (
                <button onClick={() => {
                  axios
                    .post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`,{},{withCredentials:true,headers:{
                      "API-KEY" : "560961f6-c212-4142-b02d-d99d0a8308d3"
                    }})
                    .then(response=>{
                      if(response.data.resultCode === 0){
                        props.follow(u.id)
                      }
                    })
                  }}>
                  follow
                </button>
///////////////////////////////////////////////////////////////////
das63 DAL
data access layer
mer Ui@ petq chi vor serverin zapros ani hima nenc kanenq vor DAL-um lini dranq logikan parametrer@ src-um sarqecinq API papken mej@ api.js 
u logikan kamac kamac qcum enq @tex get@ menak taranq @ndex u container component-um et functia vor kanchecinq poxancecinq en argumentner@ vor@ vor petq er 2 hat vorovhetev props@ container componenti meja u tetevacnum enq response@ et api.js mihat then enq anum vor@ stanuma response eti veracuma menak data-in sarqecinq axios-i instance sax mej@ grecinq informacian avtomat parametrer@ inq@ dnuma ay senc url-n key@ en mi object@
const instance = axios.create({
    withCredentials:true,
    baseURL: `https://social-network.samuraijs.com/api/1.0/`,
    headers:{
        "API-KEY" : "560961f6-c212-4142-b02d-d99d0a8308d3"
      }
})

u esi hl@ vor chgidem senc kmna te che upakovka enq anum objecti mej
export const usersApi = {
     getUsers(currentPage ,pageSize){

        return instance
           .get(
             `users?page=${currentPage}&count=${pageSize}`,{withCredentials:true}
           ).then(response=>response.data)
     }
}
////////////////////////////////////////////////////////////////////////
SHAT USHADIR NAYEL MASIVI METODNEROV ESI ESIMINCHER AREC
das64 
button disabled follow/unFollow
erb vor knopkin sxmum es zaprosa uxarkum cankalia et knopken disable anel vor user@ an@ndhat chsxmi u liq@ zaporner chgna sarqum enq sax funcia ban reducernerum u senc <button disabled = {props.followingInProgres} asuma ete es znacheniyan true a uremn disable a ashxatum
////////////////////////////////////////////////////////////////////////
das65 
redux-thunk ira asac sankiner@ TEORIA
hima menq nenc en sarqel vor serveric galisa dal-in dalic UI UI-ic biznes esi shat vat chi bayc meka eli UI-@ shat gorca anum senc anum en bayc meka lav chi  aveli chisht klni vor biznes@ shpvi dal-i het dalnel serveri u amenaverjum gna sx UI stex mihat xndir ka redux@ connect@ petqa miangamic mez het tan stor@ bayc serveri zapros@ asinxron a dra hamar reduceri mej petq chi zapros anenq u @tex mez ognuma thunk@ menq dispatch einq uxarkum object bayc thunk-ov karanq thunk@ uxarkenq dispatch u ira mej grac lini actionCreatori-i logikan bayc stor@ chi karum funcia @nduni inq@ karuma menak object @nduni dispatch-i hamar dra hamar store-i u reducer aranqum mihatel sloy karanq sarqenq 
////////////////////////////////////////////////////////////////////////
das66 thunk practika
thunk enq sarqum reducer-um 
export const getUsersThunkCreator = (currentPage,pageSize)=>{
    
    return (dispatch)=>{
    dispatch(setIsFetching(true));

    usersApi.getUsers(currentPage, pageSize)
      .then((response) => {
        return (
          dispatch(setUsers(response.items)),
          dispatch(setIsFetching(false)),
          dispatch(setTotalUsersCount(response.totalCount))
        
        );
      });
    }
}
stanuma es tesq@ mihat mej@ galisa danniner@ zamikania a linum u sksvuma dranc heto urish functia-ov ashxatel erb vor poxancum enq asuma es chem kara functia dispatch anem dra hamar redux_store-um store@ sarqeluc poxancum enq 2rd argument let store = createStore(reducers,applyMiddleware()); u npm install petqa anenq redux-thunk@ import enq anum import  thunkMiddleware from "redux-thunk"; himi containeri mej grel enq senc  componentDidMount() {
    this.props.getUsers(this.props.currentPage,this.props.pageSize)
    sax es logikan 
    {u.followed ? (  
                <button disabled = {props.followingInProgres.some(id=>id==u.id)} onClick={() =>{
                  props.toggleFollowingProgress(true,u.id)
                  usersApi.unFollow(u.id)
                  .then(response=>{
                    if(response.data.resultCode === 0){
                      props.unFollow(u.id)
                    }
                    props.toggleFollowingProgress(false, u.id)
                  })
                   }}>

                  Unfollow
                </button>
              ) : (
                <button disabled = {props.followingInProgres.some(id=>id==u.id)} onClick={() => {
                  props.toggleFollowingProgress(true,u.id)
                  usersApi.follow(u.id)
                    .then(response=>{
                      if(response.data.resultCode === 0){
                        props.follow(u.id)
                      }
                      props.toggleFollowingProgress(false,u.id)
                    })
                  }}>
                  follow
                </button>
              )}
              ekav user reducer ay senc 
              export const follow = (userId)=>{

    return (dispatch)=>{
        dispatch(toggleFollowingProgress(true,userId))
        usersApi.follow(userId)
          .then(response=>{
            if(response.data.resultCode === 0){
                dispatch(followSuccess(userId))
            }
            dispatch(toggleFollowingProgress(false,userId))
          })
    }
}
export const unFollow = (userId)=>{

    return (dispatch)=>{
        dispatch(toggleFollowingProgress(true,userId))
        usersApi.unFollow(userId)
          .then(response=>{
            if(response.data.resultCode === 0){
                dispatch(unFollowSuccess(userId))
            }
            dispatch(toggleFollowingProgress(false,userId))
          })
    }
}
///////////////////////////////////////////////////////////////////
das68 REDIRECT
aysinqn vor ej@ avtomat mez qcuma urish eji vra menq state-um unenq auth-i stat@ dra mej parametr ka isAuth vor@ asuma login exac enq te che eti vercnum enq Dialogs component-um proverka enq grum ete false a REDIRECT ani logini eji vra REDIRECT-i hamar ka component
const Dialogs = (props) => {
    let addMessage = ()=>{
      props.addMessage()
    }
    let updateDialogText = (e)=>{
      let text = e.target.value
      props.updateDialogText(text)

    }
  let dialogsDataM = props.state.dialogsData.map((person) => (
    <DialogPerson name={person.name} id={person.id} key = {person.id}/>
  ));
  let messagesDataM = props.state.messagesData.map((m) => (
    <Message message={m.message} key = {m.id}/>
  ));
  ******************************************NAYI STEX
  if(props.isAuth === false) return <Redirect to={"/login"}/>
  **********************************************************
  return (
    <div className={s.dialogs}>
      <div className={s.dialog_items}>{dialogsDataM}</div>
      <div className={s.messages}>{messagesDataM}</div>
      <div>
        <input name=""  cols="10" rows="1" onChange = {updateDialogText} value = {props.state.dialogMessage}/>
        <button onClick = {addMessage}>Add Messae</button>
      </div>
    </div>
  );
};
un nuyn@ profileContainer-um
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    ******************************NAYI STEX
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    ************************************
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    isAuth:state.auth.isAuth
})
let WithUrlDataContainerComponent = withRouter(ProfileContiner)
export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
bayc de sra tex@ karanq es if@ grenq mihat componenti mej u sax texer@ erkar grelu poxaren grenq component kamel anenq urish dzev HOC-ov
/////////////////////////////////////////////////////////////
das69 
High Order Component HOC
inq@ etqan el component chi aveli shat functia a vor@ @ndunuma component u veradarcnuma urish component bayc et veradarcra component@ unena avel feauturner aysinqn karanq mi HOC sarqenq vor@ mez het kta componentner u ira het tvac componentneri mej klini nuyn konkret et HOC-i logikan senc mi bana stacvum bayc esi chi verjnakan@ prost@ esi nayi
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    isAuth:state.auth.isAuth
})
let AuthRedirectComponent = (props)=>{
  if(!props.isAuth) return <Redirect to={"/login"}/>
  return < ProfileContiner {...props}/>
}
let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)
export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
hima arandzin file um sarqel enq esi 
export const withAuthRedirect = (Component)=>{
    class RedirectComponent extends React.Component{
        render(){
            if(!this.props.isAuth) return <Redirect to={"/login"}/>
            return < Component {...props}/>
        }
    }
    return RedirectComponent
}
u eti import enq anum stex u grum senc
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    isAuth:state.auth.isAuth
})
let AuthRedirectComponent = withAuthRedirect(ProfileContiner)

let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)
export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent); himi miqichel dorabotka kanenq vor state mej menq amen angam HOC petq ekac key chpoxancenq petqa mihat withAuthRedirect HOC@ connect anenq barda knayes withAuthRedirect fil@
tenc stacvuma ay senc xar@ hl@ chenq hanel withAuthRedirect file-i mej
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    if(!this.props.isAuth) return <Redirect to={"/login"}/>
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}
let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
    // isAuth:state.auth.isAuth
})
let AuthRedirectComponent = withAuthRedirect(ProfileContiner)
  let mapStateToPropsForRedirect = (state) =>({
    isAuth:state.auth.isAuth
  })
  AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)


let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)

export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
withAuthRedirect.js-i mejel stacanq es tesq@
let mapStateToPropsForRedirect = (state) =>({
    isAuth:state.auth.isAuth
  })
export const withAuthRedirect = (Component)=>{
    class RedirectComponent extends React.Component{
        render(){
            if(!this.props.isAuth) return <Redirect to={"/login"}/>
            return < Component {...this.props}/>
        }
    }
    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)
    return ConnectedAuthRedirectComponent
}

vobshem mi vori ban
//////////////////////////////////////////////////////////////
das70
COMPOSE
es ancac dasi cod@ aveli karch grelu hamar  compos@ redux-ic petqa import anel 
ancaci tesq@ Dialogs-i meji darav senc 
const DialogsContainer = compose(
  connect(mapStateToProps, mapDispatchToProps),
  withAuthRedirect
)(Dialogs)
**************************************
// let AuthRedirectComponent = withAuthRedirect(Dialogs)
// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);
***************************************
export default DialogsContainer;
compos@ vercnuma Dialogs@  skzbic qcuma withAuthRedirect-i mej ashxatuma heto qcuma verevi connecti mej ashxatuma isk profileContainer-um exav senc
class ProfileContiner extends React.Component {
    
  componentDidMount() {
      
      let userId = this.props.match.params.userId
      if(!userId){
          userId = 2
      }
      this.props.getProfile(userId)
      
  }
  render() {
    return <Profile {...this.props} profile = {this.props.profile}/>;
  }
}

let mapStateToProps = (state) =>({
    profile:state.profilePage.profile,
})
/*
*****************************************************************
let AuthRedirectComponent = withAuthRedirect(ProfileContiner)
let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)

export default connect(mapStateToProps, {setUserProfile,getProfile}) (WithUrlDataContainerComponent);
********************************************************************
*/
export default compose(
  connect(mapStateToProps, {setUserProfile,getProfile}),
  withRouter,
  withAuthRedirect
)(ProfileContiner)
u nuynel users-um 
*///////////////////////////////////////////////////////////////////////
DAS71 setState, localState
componentner@ karan unenan localState texayin aysinqn classi mej sarqum enq state class ProfileStatus extends React.Component {
  state = {
    editMode: false
  }; 
  activateEditmode() {
      debugger
    this.state.editMode = true
  }
  render() {
    return (
      <>
        <div>{!this.state.editMode && <span
            onDoubleClick = {this.activateEditmode.bind(this)}
        >{this.props.status}</span>}</div>
        <div>{this.state.editMode && <input value={this.props.status} />}</div>
      </>
    );
  }
}

export default ProfileStatus; senc bayc stat@ poxeluc ushadir exi petqa urish functia kanchenq vor haskana vor stat@ iskakanic poxvela karanq ogtagorcenq nuyn functia-i mej vor@ ashxatuma onDoubleClick i vaxt 
activateEditmode() {
      this.setState({
        editMode:true
      })
    
  }
  ay senc kamel shat cayrahex petq ekac depqum this.forceUpdate() hishi vor setState@ asinxron a 
  /////////////////////////////////////////////////////////////////////
  das73
  zaprosner@ put u post@ hnaravorutyun unen objectner danninner uxarkel server put@ uxarkeluc karanq erkord parametr tanq iran json-i tesqov
  ///////////////////////////////////////////////////////////////////////
  das74
  componentDidUpdate
  stanuma 2 argument prevProps u PrevState
  componentDidUpdate-um setState@ petq lini mihst inch vor paymani mej teche max depth ashibkaya talis
  /////////////////////////////////////////////////////////////////////////////
  das75 
  Redux-form 
  redux-form@ library a vor@ storei mej qcuma ira state
  install enq anum u import enq anum redux store-um u combineReducersersi mej poxancum enq senc form:reducer
  import { reducer as formReducer } from 'redux-form'
  form:formReducer petqa partadir form lini grac vor ashxati
  u im formi component@ patatum enq reduxForm sra mej connecti nman ay senc
  const LoginReduxForm = reduxForm(
    {
      /// amen formen petqa unena anun ay senc vor@ graca form keyi mej
        form:"login"
    }
)(LoginForm)
vor former@ kpcnum enq iranc normal ashxatelu hamar vorpeszi inputeri vra onChange chdnenq hishi fluxi masin input-i tex@ ogtagorcum enq hatuk tager Fielder ay senc
const LoginForm = (props)=>{
    return(
        <>
            
            <form onSubmit = {props.handleSubmit} >
                <div>
                    <Field type="text" placeholder={"Login"}
                        component = {"input"}
                        name = {"Username"}
                    />
                </div>
                <div>
                <Field type="password" placeholder={"Password"}
                component = {"input"}
                name = {"Password"}
                />
                </div>
                <div>
                <Field type={"checkbox"}
                    name={"remember me"}
                    component={"input"}
                /> remeber me
                </div>
                <div>
                    <button>Log In</button>
                </div>
            </form>
        </>
    )
}
const LoginReduxForm = reduxForm(
    {
        form:"Login"
    }
)(LoginForm)
ay senc grecinq hima mez LoginForm-i propserum galis liq@ ban mez petqa handleSubmit callback@ u form graci mej eti dnum enq  onSubmit = {props.handleSubmit}
bayc petqa container componentin vor mej patatel einq mer form@ tanq onSubmit@
const Login = (props)=>{
    const onSubmit = (formData) =>{
        console.log(formData);
    }
    return(
        <>
            <h1>Login</h1>
            <LoginReduxForm onSubmit = {onSubmit}/>
        </>
    )
}
mer formen kanchuma handleSubmit@ isk mer poxancac funcian kashxati kkanchvi handleSubmit-i koxmic u ira mej vorpes argument objecti tesqov kgan danniner@
///////////////////////////////////////////////////////////////
das76
redux-form@ dnum enq message-i u mnacaci hamara shat lav bana el menq et flux krugavarot@ dzerov chenq sarqum sax avtomat anuma isk menq value-n vekalum u dnum enq biznesi mej bayc hima greluc input@ chi maqrvum eti kuxenq
/////////////////////////////////////////////////////////////////
das77
validators
sarqecinq arandzin papki mej validators.js meJ@ gr@m enq funcianer@
export enq anum u Fieldin poxancum enq ay senc
<Field  component="input" name="newPostText"
    validate = {[required,maxLengthCreator(10),minLength15]}
  />
  required@ maxLength15 minLength15 mer funcianeri anunnerna 
  dranq karanq grenk thunkeri nman zamikaniaov vor amen amgam tarber lengtheri hamar taza code chgrenq ay senc orinak grenq
export const maxLengthCreator =(maxLength)=> (value)=>{
    if(value.length > maxLength) return `Max length is ${maxLength}  Symbols`;
    return undefined;
 
}
let maxlength10 = maxLengthCreator(10)
const MyPostForm = (props)=>{
  return <form onSubmit={props.handleSubmit}>
  <div className={s.item}>
  <Field  component="input" name="newPostText"
    validate = {[required,maxlength10]}
  />
  <button>Add Post</button>
</div>
</form>
}
bayc es maxLength@ petqa durs hanel senc ban sarqel vor arrayi mej henc kanchum es maxDeepth ashibkaya talis vorovhetev component@ amen angam rendera linum u amen angam kanchuma eti

arandzin texer sarqum enq componentner
export enq anum u vortex vor grum enq field @tex component = {u et component@ vor@ vor arandzin sarqel enq}

export const Textarea = ({input,meta,...props}) => {
    
    return (
        <div>
            <textarea
                {...input} {...props}
            />
        </div>
    )
}
esi nayi 
Field@ mez meta ela poxancum dra mijocov mer componentin vor arandzin texa grvac u poxancaca field-in karanq asenq iran vonc pahi meta mej error touched ban ay tenc banera 
export const Textarea = ({input,meta,...props}) => {
    const hasError = meta.touched && meta.error 
    return (
        <div className = {s.formControl + ' ' + ( hasError ? s.error : '')}>
            <div>
            <textarea
                {...input} {...props}
            />
            </div>
           {hasError && <span>{meta.error}</span>}
        </div>
    )
}
//////////////////////////////////////////////////////////
das78 login saytic
//////////////////////////////////////////////////////////
das79 stopSubmit reduxForm i mejic functia a
gr@m enq senc
export const login = (email,password,rememberMe)=>{
  return(dispatch)=>{
    authAPI.login(email,password,rememberMe)
    .then((response) => {
            
      if(response.data.resultCode === 0){
        dispatch(me())
        
      } else{
        let action = stopSubmit("Login", {email:"Wrong Email"});
        dispatch(action)
      }
     
   
      
 });
    
  }
}
else-i mej dispatch enq anum et functian 
araji parametr@ iran poxancum enq formayi anun@ logini formayi anun@ Login ei drel 2rd ov fielderi anunner@ orinak logini mej ka email u password fielder@
bayc arji senc grel vor obshi ashibken cuyc ta 
let action = stopSubmit("Login", {_error:"Common Error"})

hajord dasin miqich kuxenq sax initialization kanenq
////////////////////////
das80
app-n connect-ov enq patatum bayc qani vor appi mej routerner kan vor inq@ chisht ashxati mihatel app-n petqa withRouter ov patatenq sarqecinq arandzin appreducer
mej@ esa 
import { stopSubmit } from "redux-form";
import { authAPI, usersApi } from "../API/api";
import { me } from "./auth-reducer";

const INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';

let initialState = {

    initialized: false


};

const appReducer = (state = initialState, action) => {
    switch (action.type) {
        case INITIALIZED_SUCCESS:
            return {
                ...state,
                initialized: true

            }

        default:
            return state;
    }
};

export const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })

export const initializeApp = () => {
    return (dispatch) => {
     let dispatchResult =   dispatch(me())
        dispatch(initializedSuccess())
    }
}
export default appReducer;


//////////////////////
nayi dispatch(initializedSuccess()) es tox@ petqa lini menak 
arajin tox@ lineluc heto dra hamar promisa petq dra hamar authreducerum grel enq senc 
//////////////////////////


export const setAuthUserData = (id,email,login, isAuth)=>({type:SET_USER_DATA,payload:{id,email,login, isAuth}})
export const me = ()=>(dispatch)=>{
   //********return authAPI.me()
    .then((response) => {
            
      if(response.data.resultCode === 0){
        let {id,email,login} = response.data.data
        dispatch(setAuthUserData(id,email,login,true))
      }
     
   
      
 });
    
  }

  nayi return authAPI.me() es tox@  
  en mekum el senc enq grum arden 

  export const initializeApp = () => {
    return (dispatch) => {
     let promise =   dispatch(me())
     promise.then(()=>{
        dispatch(initializedSuccess())
     })
        
    }
}
aysinqn menq hima nenc arecinq vor serverin zaprops uxaki et zapros@ ga heto nor baci ej@
////////////////////////////////////////////////
das81 selectorner
selectorner@ functianer en vor stanum en state@ vercnum en inch petqa u talis en mez sarqecinq users_selectors.js
 export const getUsersS = (state)=>{
 return state.usersPage.users
}

export const getPageSize = (state)=>{
    return state.usersPage.pageSize
   }

   
   export const getTotalUsersCount = (state)=>{
    return state.usersPage.totalUsersCount
   }
   
   export const getCurrentPage = (state)=>{
    return state.usersPage.currentPage
   }
   export const getIsFetching = (state)=>{
    return state.usersPage.isFetching
   }
   export const followingInProgres = (state)=>{
    return state.usersPage.followingInProgres
   }
   @ndex el sranic poxecinq 
   // let mapStateToProps = (state) => {
//   return {
//     users: state.usersPage.users,
//     pageSize: state.usersPage.pageSize,
//     totalUsersCount: state.usersPage.totalUsersCount,
//     currentPage: state.usersPage.currentPage,
//     isFetching: state.usersPage.isFetching,
//     followingInProgres:state.usersPage.followingInProgres
//   };
// };
ayyy sraaaaaaaaan
let mapStateToProps = (state) => {
  return {
    users: getUsersS(state),
    pageSize: getPageSize(state),
    totalUsersCount: getTotalUsersCount(state),
    currentPage: getCurrentPage(state),
    isFetching: getIsFetching(state),
    followingInProgres:followingInProgres(state)
  };
};
selectorneri mej inch logika uzes karas gres orinak arrayi map kam urish logika bayc urish dzev kanenq erevi vorovhetev amen angam mapStateToProps@ kanchvuma daje ete et componentin@ chi u amen angam petq chi ankap tex@ selectorner@ iranc meji logikan anen ka hatuk library vor@ ognuma vor mapStateToProps@ amen angam chashxati 
////////////////////////////////////////////////////////
das83 reselect
nenc enq anelu reselect library i mijocov vor amen angam sax functianer@ chkanchven ete menq unenq djvar logikayov selectorner iranc petqa sarqenq reselect-i mijocov

import { createSelector } from "reselect" 

 export const getUsersS = (state)=>{
 return state.usersPage.users
}

export const getUsersSuperSelector = createSelector(getUsersS,(users)=>{
    return users.filter(u=>true)
}) 

stacanq esi mapStateToProps-um kanchum enq getUsersSuperSelector@ poxancum enq stat@ createSelector araji parametrov kanchuma getUsers@ poxancuma state@ heto 2 mer grac callbacki mej stanuma eti u nenca anum vor ete konkret eti chi poxvel ira component@ an@ndhat render chi linum u getUsersSuperSelector kara mi qani hat prostoy selectorner @nduni sax hertov kara @nduni vobshem nra hamara vor ete shat canrabernvac operacianer unes sranq gres vor amen angam sax funcianeri het noric chkanchven
////////////////////////////////////////////////////////
das84 hooker
hooker@ funcianer en voronq inch vor vaxt mtnum en u inch vor gorca anum vonc jogeci willMount didMount ban dranq vor classneri mejen grum eti hnaravora hookerov functionali mej grel functional componenti mej grum enq useState es functian importa linum Reactic heta talis mez array 2 hat arajin@ meji znacheniyaner@ 2rd@ functian vori mijocov et znacheniyan karanq poxenq es pah@ ushadir karda nayi let arr = [10,20]
 let [a,b] = arr stex a-i valuen klini 10 isk b-in@ 20 esi grelu shat harmar dzeva 
 import React from "react";
import { useState } from "react";

const ProfileStatusWihtHooks =props=> {

 let [editMode,setEditMode] = useState(false);
 let [status,setStatus] = useState(props.status);
 const activateMode = ()=>{
  setEditMode(true)
 }
 const deactivateEditMode = ()=>{
  setEditMode(false)
   props.updateStatus(status)
 }
 const onStatusChange = e=>{
   setStatus(e.currentTarget.value)
 }
    return (
      <>
        <div>{!editMode && <span
            onDoubleClick = {activateMode}
        >{props.status || '-------'}</span>}</div>
        <div>{editMode && <input
        onChange={onStatusChange}
        autoFocus = {true} 
            onBlur={deactivateEditMode}
            value={status}
             />}</div>
            
      </>
    );
  }


export default ProfileStatusWihtHooks;


nayi vobshem exav senc bayc stex mnac mihatel component did update-i harc@ ete useEffects kgres kkardas hooker@ mi state-i mej chen kara mi qani key unenan dra hamar nayi vonc em 2 hat arandzin state sarqel ira funcianerov karas tenc qani hat uzes sarqes 
///////////////////////////////////////
85 useEffect

const ProfileStatusWihtHooks =props=> {

 let [editMode,setEditMode] = useState(false);
 let [status,setStatus] = useState(props.status);
 useEffect(()=>{
  setStatus(props.status)

 },[])
 const activateMode = ()=>{
  setEditMode(true)
 }
 const deactivateEditMode = ()=>{
  setEditMode(false)
   props.updateStatus(status)
 }
 const onStatusChange = e=>{
   setStatus(e.currentTarget.value)
 }
    return (
      <>
        <div>{!editMode && <span
            onDoubleClick = {activateMode}
        >{props.status || '-------'}</span>}</div>
        <div>{editMode && <input
        onChange={onStatusChange}
        autoFocus = {true} 
            onBlur={deactivateEditMode}
            value={status}
             />}</div>
            
      </>
    );
  }
  grel enq senc useEffect-i erkord argument datark array@ nshanakuma vor iran asum enq amen pererisovka lineluc mi angam kanchi iran bayc vabshe xorhurd chi trvum tenc anel hamel mez petqa nenc anel vor nor props galuc eli ashxati inq@ componentDidUpdate-i nman 
   useEffect(()=>{
  setStatus(props.status)

 },[props.status])
 grumenq senc aysinqn hima inq@ nayuma amen angam erb vor props.status@ poxvela et vaxta ashxatelu chpoxvec chi ashxatelu 
 ////////////////////////////////////////////////////////////
 das87 shouldComponentUpdate

 classovi componenti mej ka senc funcia shouldComponentUpdate inq@ stanuma 3 hat argument nextProps nextState u inq@ asuma amen agam petqa noric update arvi render@ petqa eli ashxati te che qani vor canr processa amen angam etqan ban nkarel@ karanq menq senc grenq 
 shouldComponentUpdate(nextProps,nextState){
   if(nextProps!=this.props || nextState != this.state){
     return true
   }
 }
 aysinqn hamematenq nor tena petqa nkarel te che 
 byac goyutyun uni PureComponent dra hamar erb vor grum enq 
 class Post extends React.Component karanq grenq ay senc
 class Post extends React.PureComponent es PureComponent@ mer tex@ avtomat kani hamematutyun@ isk functional componenti depqum patatum enq React.memo-i mej ay senc
 const Myposts = ****React.memo*****(props => {
  let postsDataM = props.posts.map((post) => (
    <Post message={post.message} likes={post.likesCount} key ={post.id}/>
  ));


  let AddPost = (value) =>{
    props.addPost(value.newPostText)
  }
  return (
    <div>
      My posts
      <MyPostFormReduxForm onSubmit={AddPost}/>
      {postsDataM}
    </div>
  );
}) ;
//////////////////////////////////////////////////////////
das89 tester jest tdd 
testern el grum enq senc nax petqa fayli anun@ lini inchvoranun.test.js heto terminalum npm run test em anum inchqan es dzevi grac fayl ka sax kashxati test kancni 
meji logikan el senca  
const { default: profileReducer, addPostActionCreator } = require("./profile_reducer");
test('New Post Should Be Added', () => {
  //1.start datda
  let action = addPostActionCreator("KAMO")
  let state = {
    posts: [
      { id: 1, message: "HI", likesCount: 11 },
      { id: 2, message: "first Post", likesCount: 12 },
      { id: 3, message: "Second Post", likesCount: 55 },
    ],
  }
  //2.action
  let newState = profileReducer(state,action)
  //!! 3. expectation 
 expect(newState.posts.length).toBe(4)
  
});
////////////////////////////////////////////////////////////
das90 redux-ducks
erb vor menq action enq poxancum storein inq@ eti qcuma sax reducernerov saxi reducerner@ ashxatum en actioni anunner@ petqa misht tarbevi hankarc nuyn@ chlini teche 2 hat reducer kashxati miangamic redux-ducks@ asuma vor petqa amen action-i dem gren ira unikal dzevov orinak "social-network/SET_USER_DATA"
ha mekel asynv await-i masin karda miqich 

***********************************************
/////////////////////////////////////////////////
stex follow unfollow functian nayi ashxatuma bayc button@ chi poxvum tes ete karas dzes ete che tox hin dzevov refactor mi ara nayi anpayman destrukturizacia-n
*************************************************
//////////////////////////////////////////////////
